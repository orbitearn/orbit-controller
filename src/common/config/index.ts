import { ChainConfig } from "../../common/interfaces";
import { $, toJson } from "./config-utils";

export type NetworkName = "NEUTRON";
export type Wasm = "bank.wasm";
export type Label = "bank";

export const ADDRESS = {
  WORKER: "",
};

/**
 * This config is used to generate `config.json` used by any script (ts, js, bash).
 * It must be filled manually. If any contract must be added it's required to include
 * it with default parameters - code is 0, address is "".
 * This config uses logs.json generated by local-interchaintest to update endpoints
 * in cofig.json.
 */
export const CHAIN_CONFIG: ChainConfig = {
  CHAINS: [
    {
      NAME: "neutron",
      PREFIX: "neutron",
      OPTIONS: [
        // TODO: NEUTRON test
        {
          TYPE: "test",
          DENOM: "untrn",
          CHAIN_ID: "pion-1",
          RPC_LIST: ["https://rpc-falcron.pion-1.ntrn.tech:443"],
          GAS_PRICE_AMOUNT: 0.0053,
          STORE_CODE_GAS_MULTIPLIER: 21.5,
          CONTRACTS: [
            {
              WASM: "bank.wasm",
              LABEL: "bank",
              INIT_MSG: toJson({}),
              MIGRATE_MSG: toJson({}),
              UPDATE_MSG: toJson({}),
              CODE: 11275,
              ADDRESS:
                "neutron14zx2vdrnsy9shky0w865uuymgn03w96n79sskjl5958jspwp673ssrgea3",
            },
          ],
          IBC: [],
        },

        // TODO: NEUTRON main
        {
          TYPE: "main",
          DENOM: "untrn",
          CHAIN_ID: "neutron-1",
          RPC_LIST: ["https://rpc.cosmos.directory/neutron"],
          GAS_PRICE_AMOUNT: 0.0053,
          STORE_CODE_GAS_MULTIPLIER: 21.5,
          CONTRACTS: [
            {
              WASM: "bank.wasm",
              LABEL: "bank",
              INIT_MSG: toJson({}),
              MIGRATE_MSG: toJson({}),
              UPDATE_MSG: toJson({}),
              CODE: 0,
              ADDRESS: "",
            },
          ],
          IBC: [],
        },
      ],
    },
  ],
};
